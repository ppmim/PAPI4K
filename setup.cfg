[metadata]
package_name = papi
description = The data processing pipeline for the PANIC instrument
author = Jose-Miguel Ibanez-Mengual
author_email = jmiguel@iaa.es
license = GPLv3
url = https://github.com/ppmim/PAPI
edit_on_github = False
github_project = ppmim/MIMA
version = 2.0
keywords = scientific, image, astronomy, FITS
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: GPLv3 License
    Operating System :: POSIX
    Programming Language :: C
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[build_docs]
source-dir = doc
build-dir = doc/_build
all_files = 1

[upload_docs]
upload-dir = doc/_build/html
show-response = 1

[tool:pytest]
minversion = 3.7
norecursedirs = build doc/_build
addopts = -p no:warnings
inputs_root = mcs-pipeline
results_root = mcs-pipeline-results
doctest_plus = true
doctest_rst = true
text_file_format = rst


[ah_bootstrap]
auto_use = True

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = numpy>=1.13
install_requires = numpy>=1.13; qtpy>=1.1; astropy>=4;
tests_require = pytest

[options.extras_require]
recommended = scipy>=0.18.1; matplotlib>=2.2.2; opencv-python>=3.4.1;
docs = sphinx-astropy
gtk3 = pycairo; pygobject
qt5 = PyQt5;
tk = aggdraw
web = tornado; aggdraw


[flake8]
# Ignoring these for now:
# E129: visually indented line with same indent as next logical line
# E265: block comment should start with '#'
# E266: too many leading '#' for block comment
# E402: module level import not at top of file
# E501: line too long
# E741: ambiguous variable name 'l'
# I100: import statements are in the wrong order
# I101: imported names are in the wrong order
# W504: line break after binary operator
# F841: local variable '%s' is assigned to but never used
ignore = E129,E265,E266,E402,E501,E741,I100,I101,W504,F841
exclude = FLI, FLI-linux, docs, Others

[bdist_wheel]
# This flag says that the code is written to work on both Python 2 and Python
# 3. If at all possible, it is good practice to do this. If you cannot, you
# will need to generate wheels for each Python version that you support.
universal=0